{"version":3,"sources":["components/TestComponent.jsx","components/TestComponent2.jsx","App.js","reportWebVitals.js","index.js"],"names":["TestComponent","useState","val","setVal","datalist","setDatalist","className","onSubmit","e","preventDefault","alert","textVal","type","value","onChange","target","length","map","elem","index","TestComponent2","reverseVal","setReverseVal","targVal","combine","split","reverse","join","console","log","combine2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA4DeA,EA1DO,WAElB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KA4BA,OACI,mCACI,sBAAKC,UAAU,aAAf,UACI,0CACA,uBAAMC,SAvBC,SAACC,GAGhB,GAFAA,EAAEC,iBAEU,KAARP,EAEAQ,MAAM,8BAEH,CACH,IAAIC,EAAO,sBAAOP,GAAP,CAAiBF,IAE5BG,EAAYM,GACZR,EAAO,MAYH,UACI,uBAAOS,KAAK,OAAOC,MAAOX,EAAKY,SA9B1B,SAACN,GAElBL,EAAOK,EAAEO,OAAOF,UA6BJ,+CAEJ,+BAAOT,EAASY,OAAS,EAAI,gBAAkB,+BAE3CZ,EAASa,KAAI,SAACC,EAAMC,GAEhB,OAEI,6BACKD,GADIC,YCdtBC,EA/BQ,WAEnB,MAAsBnB,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAoCF,mBAAS,IAA7C,mBAAOoB,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,sBAAKhB,UAAU,mBAAf,UACI,0CAEA,uBAAOM,KAAK,OAAOC,MAAOX,EAAKY,SAjBtB,SAACN,GAElB,IAAIe,EAAUf,EAAEO,OAAOF,MACvBV,EAAOoB,GACP,IAAIC,EAAUD,EAAQE,MAAM,KAAKC,UAAUC,KAAK,KAChDC,QAAQC,IAAI,SAAUL,GACtB,IAAIM,EAAWN,EAAQC,MAAM,IAAIC,UAAUC,KAAK,IAChDL,EAAcQ,MAWN,iDAAoBT,WCNrBU,MAdf,WAEE,OACE,mCACA,sBAAKzB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCCS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70ff5f53.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TestComponent = () => {\r\n\r\n    const [val, setVal] = useState('');\r\n    const [datalist, setDatalist] = useState([]);\r\n\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setVal(e.target.value);\r\n\r\n    }\r\n\r\n    const submitData = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (val === \"\") {\r\n\r\n            alert(\"please Enter Some text\");\r\n\r\n        } else {\r\n            let textVal = [...datalist, val]\r\n\r\n            setDatalist(textVal);\r\n            setVal(\"\");\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user_input\">\r\n                <h4>Task - 1</h4>\r\n                <form onSubmit={submitData}>\r\n                    <input type=\"text\" value={val} onChange={handleChange} />\r\n                    <button >Submit</button>\r\n                </form>\r\n                <span>{datalist.length > 0 ? \"You Enter : -\" : \" Please Enter Some Text...\"}</span>\r\n                {\r\n                    datalist.map((elem, index) => {\r\n\r\n                        return (\r\n\r\n                            <li key={index}>\r\n                                {elem}\r\n                            </li>\r\n                        )\r\n\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestComponent\r\n","import React, { useState } from 'react';\r\n\r\nconst TestComponent2 = () => {\r\n\r\n    const [val, setVal] = useState('');\r\n    const [reverseVal, setReverseVal] = useState(``);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        let targVal = e.target.value;\r\n        setVal(targVal);\r\n        let combine = targVal.split(\" \").reverse().join(\" \");\r\n        console.log(\"first \", combine);\r\n        let combine2 = combine.split(\"\").reverse().join(\"\");\r\n        setReverseVal(combine2);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"user_input user2\">\r\n                <h4>Task - 2</h4>\r\n\r\n                <input type=\"text\" value={val} onChange={handleChange} />\r\n                <span> you Enter - {reverseVal}</span>\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestComponent2\r\n","import './App.css';\nimport Testcomponent  from './components/TestComponent';\nimport Testcomponent2  from './components/TestComponent2';\n\n\nfunction App() {\n\n  return (\n    <>\n    <div className=\"flex_grid\">\n      <Testcomponent/>\n      <Testcomponent2/>\n    </div>\n    \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}